# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
    - '*-main'
    - '*-ci'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Install depencies
        run: sudo apt-get install ccache libssl-dev u-boot-tools python-mako debhelper fakeroot gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu make device-tree-compiler

      - name: setup env
        run: |
          echo "buildtime=$(date +'%Y-%m-%d_%H:%M')" >> $GITHUB_ENV
          echo "kernelversion=$(make kernelversion)" >> $GITHUB_ENV
          echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
          echo "$BRANCH $kernelversion $buildtime"
#      - name: build for bananapi-r2
#        run: |
#          export PATH=/usr/lib/ccache:$PATH
#          bash build.sh importconfig
#          bash build.sh build
#          bash build.sh cryptodev
#      - name: pack for bananapi-r2
#        run: |
#          bash build.sh pack_debs
#          bash build.sh pack
#      - name: build for bananapi-r64
#        run: | 
#          sed -i 's/#\(board=bpi-r64\)/\1/' build.conf #change board to r64
#          bash build.sh importconfig
#          bash build.sh build
#          bash build.sh cryptodev
#      - name: pack for bananapi-r64
#        run: |
#          bash build.sh pack_debs
#          bash build.sh pack
      - name: Upload binaries to release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${BRANCH}-${kernelversion}-${buildtime}"
          prerelease: true
          title: "Build for $BRANCH"
          files: |
            "*.its"
#            "../SD/*"
#            "../*.deb"
#            "*.itb"

#        uses: svenstaro/upload-release-action@v2
#        with:
#          #repo_name: frank-w/buildroot
#          # A personal access token for the GitHub repository in which the release will be created and edited.
#          # It is recommended to create the access token with the following scopes: `repo, user, admin:repo_hook`.
#          repo_token: ${{ secrets.GITHUB_TOKEN }}
#          file: rootfs*.cpio.gz
#          tag: ${{ github.ref }}
#          overwrite: true
#          body: "release for bpi-r2 + bpi-r64"
#          file_glob: true
